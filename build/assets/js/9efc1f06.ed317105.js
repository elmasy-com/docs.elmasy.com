"use strict";(self.webpackChunkwiki_elmasy_com=self.webpackChunkwiki_elmasy_com||[]).push([[754],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,g=m["".concat(l,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4791:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={title:"Uptime Kuma",keywords:["Uptime Kuma","monitoring"],description:"A fancy self-hosted monitoring tool.",tags:["monitoring"]},o="Uptime Kuma",s={unversionedId:"guides/uptimekuma",id:"guides/uptimekuma",title:"Uptime Kuma",description:"A fancy self-hosted monitoring tool.",source:"@site/docs/guides/uptimekuma.md",sourceDirName:"guides",slug:"/guides/uptimekuma",permalink:"/guides/uptimekuma",draft:!1,editUrl:"https://github.com/elmasy-com/docs.elmasy.com/tree/main/docs/guides/uptimekuma.md",tags:[{label:"monitoring",permalink:"/tags/monitoring"}],version:"current",frontMatter:{title:"Uptime Kuma",keywords:["Uptime Kuma","monitoring"],description:"A fancy self-hosted monitoring tool.",tags:["monitoring"]},sidebar:"docSidebar",previous:{title:"OpenSSH",permalink:"/guides/ssh"},next:{title:"WireGuard",permalink:"/guides/wireguard"}},l={},p=[{value:"Install",id:"install",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Setup",id:"setup",level:3}],u={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"uptime-kuma"},"Uptime Kuma"),(0,a.kt)("p",null,"Source: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/louislam/uptime-kuma"},"https://github.com/louislam/uptime-kuma")),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)("p",null,"Install Uptime Kuma with Nginx and systemd."),(0,a.kt)("h3",{id:"dependencies"},"Dependencies"),(0,a.kt)("p",null,"NodeJS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://deb.nodesource.com/setup_18.x | bash -\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"apt-get install -y nodejs\n")),(0,a.kt)("p",null,"Install Git, Nginx and Certbot:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"apt install git nginx python3-certbot-nginx\n")),(0,a.kt)("p",null,"Create a user for Uptime Kuma:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'adduser --disabled-password --disabled-login --gecos "" uptime\n')),(0,a.kt)("h3",{id:"setup"},"Setup"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd /var/www\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/louislam/uptime-kuma.git uptime.example.com\n")),(0,a.kt)("p",null,"Change the owner/group of the files:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"chown -R uptime:uptime uptime.example.com\n")),(0,a.kt)("p",null,"Change the current user:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo -u uptime /bin/bash\n")),(0,a.kt)("p",null,"Run the setup:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run setup\n")),(0,a.kt)("p",null,"Get a certificate from Let's Encrypt:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"certbot certonly --nginx -d uptime.example.com --rsa-key-size 4096\n")),(0,a.kt)("p",null,"Configure Nginx:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-nginx"},'# https\nserver {\n\n        # Enable SSL and HTTP2\n        listen 443 ssl http2;\n\n        server_name uptime.example.com;\n\n        access_log /var/log/nginx/access.log;\n\n        # Set certificate path\n        ssl_certificate /etc/letsencrypt/live/uptime.example.com/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/uptime.example.com/privkey.pem;\n        ssl_trusted_certificate /etc/letsencrypt/live/uptime.example.com/fullchain.pem;\n\n        # Enable OCSP\n        ssl_stapling on;\n        ssl_stapling_verify on;\n        resolver 1.1.1.1 1.0.0.1;\n        resolver_timeout 5s;\n\n        # Add security headers\n        add_header X-Frame-Options "SAMEORIGIN" always;\n        add_header X-XSS-Protection "1; mode=block" always;\n        add_header X-Content-Type-Options "nosniff" always;\n        add_header Referrer-Policy \'strict-origin\' always;\n        add_header Strict-Transport-Security "max-age=63072000" always;\n\n        # Reverse proxy\n        location / {\n                proxy_set_header Host $host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_set_header X-Forwarded-Proto $scheme;\n                proxy_http_version 1.1;\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection "upgrade";\n\n                proxy_pass http://127.0.0.1:3001;\n        }\n}\n\n# http\nserver {\n\n        listen 80;\n        server_name  uptime.example.com;\n\n        # Redirect http to https\n        return 301 https://$host$request_uri;\n}\n')),(0,a.kt)("p",null,"Create a systemd service:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/systemd/system/uptime.service\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[Unit]\nDescription=Uptime-Kuma - A free and open source uptime monitoring solution\nDocumentation=https://github.com/louislam/uptime-kuma\nAfter=network.target\n\n[Service]\nType=simple\nUser=uptime\nGroup=uptime\nWorkingDirectory=/var/www/uptime.example.com\nExecStart=/usr/bin/npm run start-server\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n")))}c.isMDXComponent=!0}}]);