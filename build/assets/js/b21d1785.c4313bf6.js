"use strict";(self.webpackChunkwiki_elmasy_com=self.webpackChunkwiki_elmasy_com||[]).push([[379],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,k=p["".concat(i,".").concat(m)]||p[m]||u[m]||l;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9862:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={title:"CoreDNS",keywords:["coredns","dns"],description:"Install and manage CoreDNS.",tags:["linux","dns","domain"],toc_max_heading_level:4},o=void 0,s={unversionedId:"guides/coredns",id:"guides/coredns",title:"CoreDNS",description:"Install and manage CoreDNS.",source:"@site/docs/guides/coredns.md",sourceDirName:"guides",slug:"/guides/coredns",permalink:"/guides/coredns",draft:!1,editUrl:"https://github.com/elmasy-com/docs.elmasy.com/tree/main/docs/guides/coredns.md",tags:[{label:"linux",permalink:"/tags/linux"},{label:"dns",permalink:"/tags/dns"},{label:"domain",permalink:"/tags/domain"}],version:"current",frontMatter:{title:"CoreDNS",keywords:["coredns","dns"],description:"Install and manage CoreDNS.",tags:["linux","dns","domain"],toc_max_heading_level:4},sidebar:"docSidebar",previous:{title:"Certbot",permalink:"/guides/certbot"},next:{title:"iptables",permalink:"/guides/iptables"}},i={},c=[{value:"Install",id:"install",level:2},{value:"Create user",id:"create-user",level:3},{value:"Install binary",id:"install-binary",level:3},{value:"Corefile",id:"corefile",level:3},{value:"systemd service",id:"systemd-service",level:3},{value:"<code>coredns.service</code>",id:"corednsservice",level:4},{value:"Create service",id:"create-service",level:4},{value:"Start the service",id:"start-the-service",level:4},{value:"Enable CoreDNS",id:"enable-coredns",level:4},{value:"Firewall",id:"firewall",level:3},{value:"nftables",id:"nftables",level:4}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)("h3",{id:"create-user"},"Create user"),(0,a.kt)("p",null,"Create a new user for CoreDNS to run as an unprivileged user. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'adduser --system --group --shell "/usr/sbin/nologin" --comment "CoreDNS" --home "/etc/coredns" coredns\n')),(0,a.kt)("h3",{id:"install-binary"},"Install binary"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Download the latest binary from the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/coredns/coredns/releases"},"releases"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/coredns/coredns/releases/download/v1.11.1/coredns_1.11.1_linux_arm64.tgz\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/coredns/coredns/releases/download/v1.11.1/coredns_1.11.1_linux_arm64.tgz.sha256\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Check the SHA256 sum of the downloaded file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sha256sum -c coredns_1.11.1_linux_arm64.tgz.sha256\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Extract the the binary from the downloaded archive:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"tar -xvf coredns_1.11.1_linux_arm64.tgz \n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Install the binary:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"install coredns /usr/bin/\n")),(0,a.kt)("h3",{id:"corefile"},"Corefile"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Open ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/coredns/Corefile"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/coredns/Corefile\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Write the lines below for a basic configuration:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},". {\n    forward . 1.1.1.1 8.8.8.8 9.9.9.9\n    log\n}\n")),(0,a.kt)("h3",{id:"systemd-service"},"systemd service"),(0,a.kt)("h4",{id:"corednsservice"},(0,a.kt)("inlineCode",{parentName:"h4"},"coredns.service")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[Unit]\nDescription=CoreDNS Server\nDocumentation=https://coredns.io/manual/\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nUser=coredns\nGroup=coredns\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nRestart=always\nWorkingDirectory=/etc/coredns\nExecStart=/usr/bin/coredns \nExecReload=/usr/bin/kill -USR1 $MAINPID\n\n[Install]\nWantedBy=multi-user.target\n")),(0,a.kt)("h4",{id:"create-service"},"Create service"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Open ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/systemd/system/coredns.service"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/systemd/system/coredns.service\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Write the lines found under ",(0,a.kt)("inlineCode",{parentName:"li"},"coredns.service"),".")),(0,a.kt)("h4",{id:"start-the-service"},"Start the service"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Reload systemd")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl daemon-reload\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Start ",(0,a.kt)("inlineCode",{parentName:"li"},"coredns.service"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start coredns.service\n")),(0,a.kt)("h4",{id:"enable-coredns"},"Enable CoreDNS"),(0,a.kt)("p",null,"To start CoreDNS at system startup, enable it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl enable coredns.service\n")),(0,a.kt)("h3",{id:"firewall"},"Firewall"),(0,a.kt)("h4",{id:"nftables"},"nftables"),(0,a.kt)("p",null,"Below is an example for ",(0,a.kt)("a",{parentName:"p",href:"/guides/nftables"},"nftables"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"#!/usr/sbin/nft -f\n\nflush ruleset\n\ntable inet filter {\n\n    chain inbound_ipv4 {\n        icmp type echo-request limit rate 5/second accept\n    }\n\n    chain inbound_ipv6 {\n        icmpv6 type { nd-neighbor-solicit, nd-router-advert, nd-neighbor-advert } accept\n        icmpv6 type echo-request limit rate 5/second accept\n    }\n\n    chain input {\n        type filter hook input priority 0; policy drop;\n        ct state { established, related } accept\n        iifname lo accept\n        meta protocol vmap { ip : jump inbound_ipv4, ip6 : jump inbound_ipv6 }\n        tcp dport 22 accept\n        tcp dport 53 accept\n        udp dport 53 accept\n    }\n\n    chain forward {\n        type filter hook forward priority 0; policy drop;\n    }\n\n    chain output {\n        type filter hook output priority 0;\n    }\n}\n")))}u.isMDXComponent=!0}}]);